# determine whether to return full names or just dir names
if(isTRUE(full.names))
return(dirs)
else
return(basename(dirs))
}
# DCI IDs
DCI_Wellness <- read_csv("~/Library/CloudStorage/GoogleDrive-lagraham@stanford.edu/Shared drives/Secure: DCI Research/Analysis_Graham/Wearables Data/DCI_Wellness.txt")
DCI_Wellness$ID <- DCI_Wellness$`MyPHD-ID-on-study-bucket`
# Demographics
library(readxl)
Demo <- read_excel("~/Library/CloudStorage/GoogleDrive-lagraham@stanford.edu/Shared drives/Secure: DCI Research/Analysis_Graham/Wearables Data/2024 Master List.xlsx",
sheet = "Master")
# Identify IDs in Metrics data
data.path <- "~/Library/CloudStorage/GoogleDrive-lagraham@stanford.edu/Shared drives/Secure: DCI Research/Analysis_Graham/Wearables Data/Data Downloads/dci-wellness-study/"
ids <- list.dirs(data.path)
length(ids)
# 11/18/2024: n=34 participants
# Use this code to determine the types of metrics for each id
ids <- ids[!str_detect(ids,pattern="transformed")]
for (id in ids){
dir <- paste(data.path,id,"/", sep="")
print(id)
print(dir(dir))
}
# Confirmed all IDS have "st" for steps
# Nearly all of "hr" and "sl"
# Heart Rate Variability: hrv heartvar
################################## Step Counts Analysis ##############################################
# Pull Current Data for All Participants
ids <- list.dirs(data.path)
ids <- ids[!str_detect(ids,pattern="transformed")]
ds <- data.frame()
for (id in ids){
print(id)
path <- paste(data.path,id,"/st/", sep="")
setwd(path)
# Get list of files in patient-metric folder
files <- dir(path, pattern = "*.csv")
# Merge all files in patient-metric folder to create a patient-metric file
data <- files %>% lapply(read_csv, show_col_types = FALSE) %>% plyr::rbind.fill()
if(nrow(data) == 0){
print(".... No Data Available")
}else{
data$ID <- id
data$Metric <- "Steps"
ds <- plyr::rbind.fill(ds, data)
}
}
summary(ds)
# Remove duplicate records
ds <- distinct(ds)
nrow(ds)
# Device Types
table(ds$Device)
# Summarize to the day level
daily <- ds %>%
dplyr::group_by(ID, Start_Date) %>%
dplyr::summarize(Total_Steps = sum(Value))
# Merge in ID Crosswalk
daily <- merge(DCI_Wellness, daily, by="ID")
daily <- daily %>% mutate(date = floor_date(Start_Date-Shift))
# Participants
participant.list <- daily %>%
dplyr::group_by(ID, `MyPHD-Login-Key-ID`) %>%
dplyr::summarize(Avg_Daily_Steps = mean(Total_Steps), start_date = min(date), last_date = max(date)) %>%
arrange(last_date)
subset(participant.list, ID == "a52ur6675354398284676")
# Pull Current Data for All Participants
ids <- list.dirs(data.path)
ids <- ids[!str_detect(ids,pattern="transformed")]
ds <- data.frame()
for (id in ids){
print(id)
path <- paste(data.path,id,"/st/", sep="")
setwd(path)
# Get list of files in patient-metric folder
files <- dir(path, pattern = "*.csv")
# Merge all files in patient-metric folder to create a patient-metric file
data <- files %>% lapply(read_csv, show_col_types = FALSE) %>% plyr::rbind.fill()
if(nrow(data) == 0){
print(".... No Data Available")
}else{
data$ID <- id
data$Metric <- "Steps"
ds <- plyr::rbind.fill(ds, data)
}
}
library(readxl)
sa_data <- read_excel("Library/CloudStorage/Box-Box/Laura Graham's Files/POMR (Wren)/Dr Graham POMR Compiled Data.xlsx",
sheet = "Data collection sheet_SA", skip = 7)
View(sa_data)
library(readxl)
sa_data <- read_excel("Library/CloudStorage/Box-Box/Laura Graham's Files/POMR (Wren)/Dr Graham POMR Compiled Data.xlsx",
sheet = "Data collection sheet_SA", skip = 7)
View(sa_data)
names(sa_data)
hist(sa_data$`Age if >1 year (Years)`)
table(sa_data$GCS)
hist(sa_data$`BMI*`)
hist(as.numeric(sa_data$`BMI*`))
View(sa_data)
sa_data[c(sa_data$`Age if >1 year (Years)`==0),] <- NA
hist(sa_data$`Age if >1 year (Years)`)
install.packages("mde")
mde::recode_as_na(sa_data$`Age if >1 year (Years)` , value = 0)
mde::recode_as_na(sa_data$`Age if >1 year (Years)` , value = c(0))
mde::recode_as_na(sa_data$`Age if >1 year (Years)` , value = c("0"))
sa_data$`Age if >1 year (Years)`[sa_data$`Age if >1 year (Years)` == 0] <- NA
hist(sa_data$`Age if >1 year (Years)`)
sa_data$`Age if >1 year (Years)`[sa_data$`Age if >1 year (Years)` == 0] <- NA
table(sa_data$`Age if >1 year (Years)`)
library(readxl)
sa_data <- read_excel("Library/CloudStorage/Box-Box/Laura Graham's Files/POMR (Wren)/Dr Graham POMR Compiled Data.xlsx",
sheet = "Data collection sheet_SA", skip = 7)
View(sa_data)
names(sa_data)
hist(sa_data$`Age if >1 year (Years)`)
table(sa_data$`Blank fields`)
table(sa_data$Demised)
head(sa_data)
sa_data$`Heart Rate`[sa_data$`Heart Rate`==0] <- NA
head(sa_data)
View(sa_data)
hist(sa_data$`ASA Class`)
hist(sa_data$`Heart Rate`)
table(sa_data$`ASA Class`)
hist(sa_data$`Blood Pressure (systolic)`)
hist(as.numeric(sa_data$`Blood Pressure (systolic)`))
View(sa_data)
View(sa_data)
sa_data$`Blood Pressure (systolic)`[sa_data$`Blood Pressure (systolic)`==0] <- NA
View(sa_data)
hist(as.numeric(sa_data$`Blood Pressure (systolic)`))
names(sa_data)
table(sa_data$Sex)
library(readxl)
sa_data <- read_excel("Library/CloudStorage/Box-Box/Laura Graham's Files/POMR (Wren)/Dr Graham POMR Compiled Data.xlsx",
sheet = "Data collection sheet_SA", skip = 7)
head(sa_data)
freq(sa_data, plain.ascii = FALSE, style = "rmarkdown")
library(summarytools)
freq(sa_data, plain.ascii = FALSE, style = "rmarkdown")
descr(sa_data)
(sa_data)
descr(sa_data,
stats     = c("mean", "sd"),
transpose = TRUE,
headings  = FALSE)
descr(sa_data,
stats     = c("mean", "sd", "var", "min", "max", "median", "range", "quantile"),
transpose = TRUE,
headings  = FALSE)
descr(sa_data,
stats     = c("mean", "sd", "min", "max", "med"),
transpose = TRUE,
headings  = FALSE)
descr(sa_data,
stats     = c("mean", "sd", "min", "max", "med","Pct.Valid"),
transpose = TRUE,
headings  = FALSE)
descr(sa_data,
transpose = TRUE,
headings  = FALSE)
head(sa_data)
sa_data[sa_data == 'N/A'] <- NA
library(dplyr)
na_if(sa_data, "N/A")
is.na(sa_data) <- !sa_data
sa_data[sa_data==0] <- NA
head(sa_data)
sa_data[sa_data=="N/A"] <- NA
is.na(sa_data) <- sa_data == "N/A"
is.na(sa_data[,c("Sex")]) <- sa_data[,c("Sex")] == "N/A"
head(sa_data)
is.na(sa_data[,c("Sex", "BMI")]) <- sa_data[,c("Sex", "BMI")] == "N/A"
is.na(sa_data[,c("Sex", "BMI*")]) <- sa_data[,c("Sex", "BMI*")] == "N/A"
head(sa_data)
View(sa_data)
names(sa_data)
is.na(sa_data[,c("Sex", "BMI*", "MUAC*", "ASA Class", "GCS", "AVPU (use if GCS unavailable)", "Diagnosis")]) <-
sa_data[,c("Sex", "BMI*", "MUAC*", "ASA Class", "GCS", "AVPU (use if GCS unavailable)", "Diagnosis")] == "N/A"
head(sa_data)
descr(sa_data,
transpose = TRUE,
headings  = FALSE)
library(readxl)
sa_data <- read_excel("Library/CloudStorage/Box-Box/Laura Graham's Files/POMR (Wren)/Dr Graham POMR Compiled Data.xlsx",
sheet = "Data collection sheet_SA", skip = 7)
head(sa_data)
sa_data[sa_data==0] <- NA
sa_data[sa_data=="N/A"] <- NA
sa_data[sa_data==0] <- NA
descr(sa_data,
transpose = TRUE,
headings  = FALSE)
summary(sa_data)
View(sa_data)
table(sa_data$`BMI*`)
bf_data <- read_excel("Library/CloudStorage/Box-Box/Laura Graham's Files/POMR (Wren)/Dr Graham POMR Compiled Data.xlsx",
sheet = "Data collection sheet_BF", skip = 7)
View(bf_data)
summary(sa_data)
descr(sa_data,
transpose = TRUE,
headings  = FALSE)
descr(sa_data)
descr(bf_data, transpose = TRUE, headings = FALSE)
# Clean
sa_data[sa_data==0] <- NA
bf_data[bf_data==0] <- NA
descr(sa_data, transpose = TRUE, headings = FALSE)
descr(bf_data, transpose = TRUE, headings = FALSE)
naniar::gg_miss_var( sa_data )
varp <- naniar::gg_miss_var( sa_data )
casep <- naniar::gg_miss_case( sa_data )
grid.arrange( varp, casep, ncol = 2 )
library(ggplot2)
varp <- naniar::gg_miss_var( sa_data )
casep <- naniar::gg_miss_case( sa_data )
grid.arrange( varp, casep, ncol = 2 )
library(gridExtra)
varp <- naniar::gg_miss_var( sa_data )
casep <- naniar::gg_miss_case( sa_data )
grid.arrange( varp, casep, ncol = 2 )
varp <- naniar::gg_miss_var( bf_data )
casep <- naniar::gg_miss_case( bf_data )
grid.arrange( varp, casep, ncol = 2 )
naniar::gg_miss_fct(x = sa_data, fct = `Age if >1 year (Years)`)
naniar::gg_miss_fct(x = bf_data, fct = `Age if >1 year (Years)`)
naniar::gg_miss_fct(x = sa_data, fct = `Demised`)
naniar::gg_miss_fct(x = bf_data, fct = `Demised`)
data <- rbind(sa_data, bf_data)
data <- cbind(sa_data, bf_data)
sa_data$Age <- ifelse(!is.na(sa_data$`Age if >1 year (Years)`)), sa_data$`Age if >1 year (Years)`, sa_data$`Age if <1 year (Months)`/12)
sa_data$Age <- ifelse(!is.na(sa_data$`Age if >1 year (Years)`), sa_data$`Age if >1 year (Years)`, sa_data$`Age if <1 year (Months)`/12)
hist(sa_data$Age)
bf_data$Age <- ifelse(!is.na(bf_data$`Age if >1 year (Years)`), bf_data$`Age if >1 year (Years)`, bf_data$`Age if <1 year (Months)`/12)
hist(bf_data$Age)
library(readxl)
sa_data <- read_excel("Library/CloudStorage/Box-Box/Laura Graham's Files/POMR (Wren)/Dr Graham POMR Compiled Data.xlsx",
sheet = "Data collection sheet_SA", skip = 7)
bf_data <- read_excel("Library/CloudStorage/Box-Box/Laura Graham's Files/POMR (Wren)/Dr Graham POMR Compiled Data.xlsx",
sheet = "Data collection sheet_BF", skip = 7)
head(sa_data)
summary(sa_data)
head(bf_data)
summary(sa_data)
# Clean
sa_data[sa_data==0] <- NA
bf_data[bf_data==0] <- NA
# Recode Age
sa_data$Age <- ifelse(!is.na(sa_data$`Age if >1 year (Years)`), sa_data$`Age if >1 year (Years)`, sa_data$`Age if <1 year (Months)`/12)
hist(sa_data$Age)
bf_data$Age <- ifelse(!is.na(bf_data$`Age if >1 year (Years)`), bf_data$`Age if >1 year (Years)`, bf_data$`Age if <1 year (Months)`/12)
hist(bf_data$Age)
library(summarytools)
descr(sa_data, transpose = TRUE, headings = FALSE)
descr(bf_data, transpose = TRUE, headings = FALSE)
varp <- naniar::gg_miss_var( sa_data )
casep <- naniar::gg_miss_case( sa_data )
grid.arrange( varp, casep, ncol = 2 )
varp <- naniar::gg_miss_var( bf_data )
casep <- naniar::gg_miss_case( bf_data )
grid.arrange( varp, casep, ncol = 2 )
View(sa_data)
naniar::gg_miss_fct(x = sa_data, fct = `Outcome`)
table(sa_data$Outcome)
table(sa_data$Demised)
View(bf_data)
table(sa_data$Outcome)
table(bf_data$Outcome)
naniar::gg_miss_fct(x = bf_data, fct = `Outcome`)
naniar::gg_miss_fct(x = sa_data, fct = `Outcome`)
install.packages("skimr")
skimr::skim(bf_data)
skimr::skim(sa_data)
skimr::skim(sa_data)
skimr::skim(bf_data)
varp <- naniar::gg_miss_var( bf_data )
casep <- naniar::gg_miss_case( bf_data )
grid.arrange( varp, casep, ncol = 2 )
knitr::opts_chunk$set(echo = TRUE)
library(purrr)
library(tidyverse)
library(jsonlite)
library(ggplot2)
library(dplyr)
library(tidyquant)
library(procs)
library(gtsummary)
library(readxl)
# Load Current Step Data
load("~/Library/CloudStorage/GoogleDrive-lagraham@stanford.edu/Shared drives/Secure: DCI Research/Analysis_Graham/Wearables Data/Daily_Steps.RData")
daily.steps <- daily
load("~/Library/CloudStorage/GoogleDrive-lagraham@stanford.edu/Shared drives/Secure: DCI Research/Analysis_Graham/Wearables Data/Daily_Steps.RData")
labelled::var_label(daily_steps$Pre.Post) <- "Pre/Post DCI"
load("~/Library/CloudStorage/GoogleDrive-lagraham@stanford.edu/Shared drives/Secure: DCI Research/Analysis_Graham/Wearables Data/Daily_MVPA.RData")
# Load Current Step Data
load("~/Library/CloudStorage/GoogleDrive-lagraham@stanford.edu/Shared drives/Secure: DCI Research/Analysis_Graham/Wearables Data/Daily_Steps.RData")
# Load Current HR Data
load("~/Library/CloudStorage/GoogleDrive-lagraham@stanford.edu/Shared drives/Secure: DCI Research/Analysis_Graham/Wearables Data/Daily_MVPA.RData")
# Load Current Sleep Data
load("~/Library/CloudStorage/GoogleDrive-lagraham@stanford.edu/Shared drives/Secure: DCI Research/Analysis_Graham/Wearables Data/Daily_Sleep.RData")
head(daily_steps)
daily <- merge(daily_steps, daily_mvpa, by=c("ID", "date"))
daily <- merge(daily_steps, daily_mvpa, by=c("ID", "date"), all.x=T, all.y=T)
View(daily)
daily <- merge(daily_steps, daily_mvpa, by=c("ID", "date"), all.x=T, all.y=T)
daily <- merge(daily, daily_sleep, by=c("ID", "date"), all.x=T, all.y=T)
View(daily)
names(daily)
daily <- daily[,c("ID", "data", "Total_Steps", "Total_MVPA", "Total_Sleep", "HR_Avg", "HR_Max", "HR_n", "Moderate", "Vigorous", "Sleep_Start", "Sleep_End")]
daily <- daily[,c("ID", "date", "Total_Steps", "Total_MVPA", "Total_Sleep", "HR_Avg", "HR_Max", "HR_n", "Moderate", "Vigorous", "Sleep_Start", "Sleep_End")]
load("~/Library/CloudStorage/GoogleDrive-lagraham@stanford.edu/Shared drives/Secure: DCI Research/Analysis_Graham/Survey Data/Survey_2024_07092024.RData")
survey <- survey2024[,c("id_number2", "Q156_1", "Q127", "Q129", "Q153")]
Trudiagnostics <- read.csv("~/Library/CloudStorage/GoogleDrive-lagraham@stanford.edu/Shared drives/Secure: DCI Research/Analysis_Graham/TruDiagnostics Data/PopulationData_11192024.csv", header=TRUE)
Trudiagnostics <- Trudiagnostics[,c("Patient.ID", "Telomere.Values", "OMICmAge", "Decimal.Chronological.Age")]
daily_steps <- merge(daily_steps, Demo, by = "ID", all.x = T)
Demo <- read_excel("~/Library/CloudStorage/GoogleDrive-lagraham@stanford.edu/Shared drives/Secure: DCI Research/Analysis_Graham/Wearables Data/2024 Master List.xlsx", sheet = "Master")
daily_steps <- merge(daily_steps, Demo, by = "ID", all.x = T)
daily_steps <- merge(daily_steps, survey, by.x = "Old ID", by.y = "id_number2", all.x = T)
daily_steps <- merge(daily_steps, Trudiagnostics, by.x = "TruDiagnosticID", by.y = "Patient.ID", all.x = T)
daily <- merge(daily, Demo, by = "ID", all.x = T)
daily <- merge(daily, survey, by.x = "Old ID", by.y = "id_number2", all.x = T)
daily <- merge(daily, Trudiagnostics, by.x = "TruDiagnosticID", by.y = "Patient.ID", all.x = T)
View(daily)
participant <- daily %>%
dplyr::group_by(ID) %>%
dplyr::summarize(Avg_Daily_Steps = mean(Total_Steps),
Avg_MVPA = mean(Total_MVPA),
Avg_Sleep = mean(Total_Sleep),
start_date = min(date), last_date = max(date))
View(participant)
daily %>%
dplyr::group_by(ID) %>%
dplyr::summarize(Avg_Daily_Steps = mean(Total_Steps, na.rm=T),
Avg_MVPA = mean(Total_MVPA, na.rm=T),
Avg_Sleep = mean(Total_Sleep, na.rm=T),
start_date = min(date), last_date = max(date))
# Participant level with day daily
participant <- daily %>%
dplyr::group_by(ID) %>%
dplyr::summarize(Avg_Daily_Steps = mean(Total_Steps, na.rm=T),
Avg_MVPA = mean(Total_MVPA, na.rm=T),
Avg_Sleep = mean(Total_Sleep, na.rm=T),
start_date = min(date), last_date = max(date))
daily$Pre.Post <- ifelse(daily$date < as.Date('2024-09-15'), "Pre", "Post")
daily$Pre.Post <- factor(daily$Pre.Post, levels=c("Pre", "Post"))
table(daily$Pre.Post)
daily$Times <- ifelse(daily$date < as.Date('2024-05-16'), "1. May 15 or earlier",
ifelse(daily$date <= as.Date('2024-06-28'), "2. Pre Intro to DCI (06/28/2024)",
ifelse(daily$date <= as.Date('2024-08-01'), "3. Pre Virtual Orientation (08/01/2024)",
ifelse(daily$date < as.Date('2024-09-15'), "4. Pre In-Person Orientation (09/15/2024)", "5. Post DCI Orientation"))))
table(daily$Times)
Demo <- read_excel("~/Library/CloudStorage/GoogleDrive-lagraham@stanford.edu/Shared drives/Secure: DCI Research/Analysis_Graham/Wearables Data/2024 Master List.xlsx", sheet = "Master")
# Survey Data
load("~/Library/CloudStorage/GoogleDrive-lagraham@stanford.edu/Shared drives/Secure: DCI Research/Analysis_Graham/Survey Data/Survey_2024_07092024.RData")
survey <- survey2024[,c("id_number2", "Q156_1", "Q127", "Q129", "Q153")]
# TruDiagnostics
Trudiagnostics <- read.csv("~/Library/CloudStorage/GoogleDrive-lagraham@stanford.edu/Shared drives/Secure: DCI Research/Analysis_Graham/TruDiagnostics Data/PopulationData_11192024.csv", header=TRUE)
Trudiagnostics <- Trudiagnostics[,c("Patient.ID", "Telomere.Values", "OMICmAge", "Decimal.Chronological.Age")]
# Combine all data
daily <- merge(daily, Demo, by = "ID", all.x = T)
daily <- merge(daily, survey, by.x = "Old ID", by.y = "id_number2", all.x = T)
daily <- merge(daily, survey, by.x = "ID", by.y = "id_number2", all.x = T)
daily <- merge(daily, Trudiagnostics, by.x = "TruDiagnosticID", by.y = "Patient.ID", all.x = T)
View(daily)
daily <- merge(daily_steps, daily_mvpa, by=c("ID", "date"), all.x=T, all.y=T)
daily <- merge(daily, daily_sleep, by=c("ID", "date"), all.x=T, all.y=T)
daily <- daily[,c("ID", "date", "Total_Steps", "Total_MVPA", "Total_Sleep", "HR_Avg", "HR_Max", "HR_n", "Moderate", "Vigorous", "Sleep_Start", "Sleep_End")]
daily <- merge(daily_steps, daily_mvpa, by=c("ID", "date"), all.x=T, all.y=T)
daily <- merge(daily, daily_sleep, by=c("ID", "date"), all.x=T, all.y=T)
daily <- daily[,c("ID", "date", "Total_Steps", "Total_MVPA", "Total_Sleep", "HR_Avg", "HR_Max", "HR_n", "Moderate", "Vigorous", "Sleep_Start", "Sleep_End")]
# Participant level with day daily
participant <- daily %>%
dplyr::group_by(ID) %>%
dplyr::summarize(Avg_Daily_Steps = mean(Total_Steps, na.rm=T),
Avg_MVPA = mean(Total_MVPA, na.rm=T),
Avg_Sleep = mean(Total_Sleep, na.rm=T),
start_date = min(date), last_date = max(date))
# Pre-Post Determinimation
daily$Pre.Post <- ifelse(daily$date < as.Date('2024-09-15'), "Pre", "Post")
daily$Pre.Post <- factor(daily$Pre.Post, levels=c("Pre", "Post"))
table(daily$Pre.Post)
daily$Times <- ifelse(daily$date < as.Date('2024-05-16'), "1. May 15 or earlier",
ifelse(daily$date <= as.Date('2024-06-28'), "2. Pre Intro to DCI (06/28/2024)",
ifelse(daily$date <= as.Date('2024-08-01'), "3. Pre Virtual Orientation (08/01/2024)",
ifelse(daily$date < as.Date('2024-09-15'), "4. Pre In-Person Orientation (09/15/2024)", "5. Post DCI Orientation"))))
table(daily$Times)
# Demographics
Demo <- read_excel("~/Library/CloudStorage/GoogleDrive-lagraham@stanford.edu/Shared drives/Secure: DCI Research/Analysis_Graham/Wearables Data/2024 Master List.xlsx", sheet = "Master")
# Survey Data
load("~/Library/CloudStorage/GoogleDrive-lagraham@stanford.edu/Shared drives/Secure: DCI Research/Analysis_Graham/Survey Data/Survey_2024_07092024.RData")
survey <- survey2024[,c("id_number2", "Q156_1", "Q127", "Q129", "Q153")]
# TruDiagnostics
Trudiagnostics <- read.csv("~/Library/CloudStorage/GoogleDrive-lagraham@stanford.edu/Shared drives/Secure: DCI Research/Analysis_Graham/TruDiagnostics Data/PopulationData_11192024.csv", header=TRUE)
Trudiagnostics <- Trudiagnostics[,c("Patient.ID", "Telomere.Values", "OMICmAge", "Decimal.Chronological.Age")]
# Combine all data
daily2 <- merge(daily, Demo, by = "ID", all.x = T)
daily2 <- merge(daily2, survey, by.x = "Old ID", by.y = "id_number2", all.x = T)
daily2 <- merge(daily2, Trudiagnostics, by.x = "TruDiagnosticID", by.y = "Patient.ID", all.x = T)
daily2 <- labelled::copy_labels(from = survey, to = daily2)
labelled::var_label(daily2$Pre.Post) <- "Pre/Post DCI"
labelled::var_label(daily2$gender) <- "Gender"
labelled::var_label(daily2$education) <- "Education"
labelled::var_label(daily2$Usborn) <- "Born in US"
labelled::var_label(daily2$married) <- "Marital Status"
labelled::var_label(daily2$children_living2) <- "Number of Children"
labelled::var_label(daily2$selfemployed) <- "Self-Employed"
daily2$rate_health <- factor(daily2$rate_health, levels = c("Excellent", "Very Good", "Good", "Fair", "Poor"))
labelled::var_label(daily2$rate_health) <- "Self-Reported Health"
daily2$Q156_1<- plyr::revalue(as.character(daily2$Q156_1),
c("5" = "Very Satisfied",
"4" = "Satisfied",
"3" = "Neither Dissatisfied nor Satisfied",
"2" = "Dissatisfied",
"1" = "Very Dissatisfied"))
labelled::var_label(daily2$Q156_1) <- "How satisfied are you with your health?"
knitr::opts_chunk$set(echo = TRUE)
library(purrr)
library(tidyverse)
library(jsonlite)
library(ggplot2)
library(dplyr)
library(tidyquant)
library(procs)
library(gtsummary)
library(readxl)
# Load Current Step Data
load("~/Library/CloudStorage/GoogleDrive-lagraham@stanford.edu/Shared drives/Secure: DCI Research/Analysis_Graham/Wearables Data/Daily_Steps.RData")
# Load Current HR Data
load("~/Library/CloudStorage/GoogleDrive-lagraham@stanford.edu/Shared drives/Secure: DCI Research/Analysis_Graham/Wearables Data/Daily_MVPA.RData")
# Load Current Sleep Data
load("~/Library/CloudStorage/GoogleDrive-lagraham@stanford.edu/Shared drives/Secure: DCI Research/Analysis_Graham/Wearables Data/Daily_Sleep.RData")
# Merge all Wearables
daily <- merge(daily_steps, daily_mvpa, by=c("ID", "date"), all.x=T, all.y=T)
daily <- merge(daily, daily_sleep, by=c("ID", "date"), all.x=T, all.y=T)
daily <- daily[,c("ID", "date", "Total_Steps", "Total_MVPA", "Total_Sleep", "HR_Avg", "HR_Max", "HR_n", "Moderate", "Vigorous", "Sleep_Start", "Sleep_End")]
# Participant level with day daily
participant <- daily %>%
dplyr::group_by(ID) %>%
dplyr::summarize(Avg_Daily_Steps = mean(Total_Steps, na.rm=T),
Avg_MVPA = mean(Total_MVPA, na.rm=T),
Avg_Sleep = mean(Total_Sleep, na.rm=T),
start_date = min(date), last_date = max(date))
# Pre-Post Determinimation
daily$Pre.Post <- ifelse(daily$date < as.Date('2024-09-15'), "Pre", "Post")
daily$Pre.Post <- factor(daily$Pre.Post, levels=c("Pre", "Post"))
table(daily$Pre.Post)
daily$Times <- ifelse(daily$date < as.Date('2024-05-16'), "1. May 15 or earlier",
ifelse(daily$date <= as.Date('2024-06-28'), "2. Pre Intro to DCI (06/28/2024)",
ifelse(daily$date <= as.Date('2024-08-01'), "3. Pre Virtual Orientation (08/01/2024)",
ifelse(daily$date < as.Date('2024-09-15'), "4. Pre In-Person Orientation (09/15/2024)", "5. Post DCI Orientation"))))
table(daily$Times)
# Demographics
Demo <- read_excel("~/Library/CloudStorage/GoogleDrive-lagraham@stanford.edu/Shared drives/Secure: DCI Research/Analysis_Graham/Wearables Data/2024 Master List.xlsx", sheet = "Master")
# Survey Data
load("~/Library/CloudStorage/GoogleDrive-lagraham@stanford.edu/Shared drives/Secure: DCI Research/Analysis_Graham/Survey Data/Survey_2024_07092024.RData")
survey <- survey2024[,c("id_number2", "Q156_1", "Q127", "Q129", "Q153")]
# TruDiagnostics
Trudiagnostics <- read.csv("~/Library/CloudStorage/GoogleDrive-lagraham@stanford.edu/Shared drives/Secure: DCI Research/Analysis_Graham/TruDiagnostics Data/PopulationData_11192024.csv", header=TRUE)
Trudiagnostics <- Trudiagnostics[,c("Patient.ID", "Telomere.Values", "OMICmAge", "Decimal.Chronological.Age")]
# Combine all data
daily2 <- merge(daily, Demo, by = "ID", all.x = T)
daily2 <- merge(daily2, survey, by.x = "Old ID", by.y = "id_number2", all.x = T)
daily2 <- merge(daily2, Trudiagnostics, by.x = "TruDiagnosticID", by.y = "Patient.ID", all.x = T)
daily2 <- labelled::copy_labels(from = survey, to = daily2)
labelled::var_label(daily2$Pre.Post) <- "Pre/Post DCI"
labelled::var_label(daily2$gender) <- "Gender"
labelled::var_label(daily2$education) <- "Education"
labelled::var_label(daily2$Usborn) <- "Born in US"
labelled::var_label(daily2$married) <- "Marital Status"
labelled::var_label(daily2$children_living2) <- "Number of Children"
labelled::var_label(daily2$selfemployed) <- "Self-Employed"
daily2$rate_health <- factor(daily2$rate_health, levels = c("Excellent", "Very Good", "Good", "Fair", "Poor"))
labelled::var_label(daily2$rate_health) <- "Self-Reported Health"
daily2$Q156_1<- plyr::revalue(as.character(daily2$Q156_1),
c("5" = "Very Satisfied",
"4" = "Satisfied",
"3" = "Neither Dissatisfied nor Satisfied",
"2" = "Dissatisfied",
"1" = "Very Dissatisfied"))
labelled::var_label(daily2$Q156_1) <- "How satisfied are you with your health?"
# Exclude dates prior to May 16, 2024)
daily2 <- subset(daily2, date > as.Date("2024-05-16"))
daily2 <- labelled::copy_labels(from = daily_steps, to = daily2)
mu <- plyr::ddply(daily2, "Pre.Post", summarise, grp.mean=mean(Total_Steps))
ggplot(daily2, aes(x = Total_Steps, y = ..density..)) +
geom_histogram(fill = "cornsilk", colour = "grey60", size = .2) +
geom_density(colour = "red") + theme_bw() +
geom_vline(data=mu, aes(xintercept=grp.mean, color=Pre.Post),
linetype="dashed") +
ggtitle("Average Daily Step Counts Across All Time for Participants")+
labs(x = "Average Daily Steps", y = "Density")
# Initial Table
tbl_summary(data = daily2, by=Times, include=Total_Steps,
type = all_continuous() ~ "continuous2",
statistic = all_continuous() ~ c(
"{mean} ({sd})",
"{median} ({p25}, {p75})",
"{min}, {max}"                  ),
digits = all_continuous() ~ 0,
label = Total_Steps ~ "Daily Steps"                 ) |>
add_overall()
ggplot(daily2, aes(x = date, y = Total_Steps)) +
geom_point(colour = "grey60", size = .5) +
geom_smooth(colour = "red") +
scale_x_datetime(date_breaks="1 month", date_labels="%b-%Y") +
labs( x = "Average Daily Steps", y = "Density")+
theme_bw()
tbl_continuous(data=daily2, variable = Total_Steps, include = names(daily2)[c(6:11)])
